// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartToysStore.DataAccess.Data;

#nullable disable

namespace SmartToysStore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241121183148_AddProductsTableAndSeedProducts")]
    partial class AddProductsTableAndSeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartToysStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Interactive"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Feeder"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Waterer"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Plush"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "Movers"
                        });
                });

            modelBuilder.Entity("SmartToysStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Pink",
                            Description = "This interactive dog puzzle toy provides an entertaining brain game for puppies and cats. It encourages and trains your pets to seek food by sliding the parts, helping them increase their IQ through learning sequential steps and engaging in challenging play.",
                            Image = "https://m.media-amazon.com/images/I/71XFp-kRtGL._AC_SL1500_.jpg",
                            Link = "https://www.amazon.com/SYNATANA-Enrichment-Stimulation-Training-Dispense/dp/B0DCYYX4LR/ref=sr_1_1_sspa?crid=2R31LDUSIGVE6&dib=eyJ2IjoiMSJ9.27vy3bjlY6X8DSfw2qzdQ6IqxI8zm5keAnRoAwpuDcDwwMbGxlTe_WGX7Tfc7CnMECjp4JtxnnmE304bJJ97tWOAg7Gr5v9XBiRyK97zTEPBNctjbyuISDXCg0CpBvqb6jrGTKmCPypFnHk9_h9yTurRDC7bbaoJ4ejKyt9XI5njVtzqlIo9D-lTgI134LxnPJNKfEjTorKbzH5bgHiEAcFYGsd1gE41ZMPtqYfGwO3p-UhYjK-c4tbrCg99EOj9IxQ1zjyKVAj76WmabSNGrOa3Vc3Bkv3Xij_o9uFHIvg.jw4pl-sO9G1ILQzGEcYLfbQBiYMKiElc3Z_5Oqs3OV0&dib_tag=se&keywords=dogs%2Btoys%2Bsmart&qid=1732174403&sprefix=dogs%2Btoys%2Bsmar%2Caps%2C176&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&th=1",
                            ModelCode = "B0DCYYX4LR",
                            Name = "Dog Puzzle Toy",
                            Price = 10.0,
                            Price100 = 9.5,
                            Price50 = 9.8000000000000007
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
